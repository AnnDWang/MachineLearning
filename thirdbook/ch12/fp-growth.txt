FP-growth，比Apriori快，基于Apriori构建，在完成相同任务时采用了不同的技术

FP-growth只会扫描数据集两次，发现频繁项集的基本过程如下：
（1）构建FP树
（2）从FP树种挖掘频繁项集

FP-growth算法：
优点：一般要快于Apriori
缺点：实现比较困难，在某些数据集上性能会下降
适用数据类型：标称型数据

FP-growth算法将数据存储在一种称为FP树的紧凑数据结构中。FP代表频繁模式（Frequent Pattern）

FP-growth算法的工作流程如下：
首先构建FP树，然后利用它来挖掘频繁项集
为了构建FP树，需要对原始数据集扫描两遍
第一遍对所有元素项的出现次数进行计数
数据库的第一遍扫描用来统计出现的频率
第二遍扫描中只考虑哪些频繁元素

FP-growth的一般流程
（1）收集数据：使用任意方法
（2）准备数据：由于存储的是集合，所以需要离散数据。如果要处理连续数据，需要将他们量化为离散值
（3）分析数据：使用任意方法
（4）训练算法：构建一个FP树，并对树进行挖掘
（5）测试算法：没有测试过程
（6）使用算法：可以用于识别经常出现的元素项，从而用于制定决策、推荐元素或进行预测等应用中

从FP树中获得频繁项集的三个基本步骤如下：
（1）从FP树中获得条件模式基
（2）利用条件模式基，构建一个条件FP树
（3）迭代重复步骤（1）（2），直到树包含一个元素项为止
